/*
 * This is a manifest file that'll be compiled into application.css, which will include all the files
 * listed below.
 *
 * Any CSS and SCSS file within this directory, lib/assets/stylesheets, or any plugin's
 * vendor/assets/stylesheets directory can be referenced here using a relative path.
 *
 * You're free to add application-wide styles to this file and they'll appear at the bottom of the
 * compiled file so the styles you add here take precedence over styles defined in any other CSS/SCSS
 * files in this directory. Styles in this file should be added after the last require_* statement.
 * It is generally better to create a new file per style scope.
 *
 *= require_tree .
 *= require_self
 */

$primary: #006CAA;
$success: #32A600;
$danger: #830E00;
$info: #E30080;

@import "bootstrap/scss/bootstrap";

.feedback-container {
  @include media-breakpoint-down(lg) {
    .alert {
      margin-bottom: 1.5rem;
    }
  }

  @include media-breakpoint-up(lg) {
    position: fixed;
    top: 0;
    right: 0;
    padding: 1rem;
    z-index: 1;

    .alert {
      width: 400px;
    }
  }
}

.btn-link {
  padding: 0;
}

// Fix checks on Safari
.form-check-input {
  appearance: none;
  -moz-appearance: none;
  -webkit-appearance: none;
}

.link-hover-underline {
  a:not(:hover), .btn-link:not(:hover) {
    @extend .text-decoration-none;
  }
}

@each $color, $value in $theme-colors {
  .form-check-#{$color} .form-check-input:checked {
    border-color: $value;
    background-color: $value;
  }
}

.up-next {
  @include media-breakpoint-down(md) {
    height: 70px;
  }
}

.up-next-img {
  &.up-next-img-1 {
    @include media-breakpoint-up(md) {
      width: 100%;
    }

    @include media-breakpoint-down(md) {
      height: 100%;
    }

    opacity: 1;
  }

  &.up-next-img-2 {
    @include media-breakpoint-up(md) {
      width: 75%;
    }

    @include media-breakpoint-down(md) {
      height: 75%;
    }

    opacity: 0.75;
  }

  &.up-next-img-3 {
    @include media-breakpoint-up(md) {
      width: 50%;
    }

    @include media-breakpoint-down(md) {
      height: 50%;
    }

    opacity: 0.5;
  }
}

.board {
  background-color: $gray-300;
  position: relative;
}

.board-cell {
  position: relative;

  &:before {
    content: "";
    display: block;
    padding-top: 100%;
  }

  &.board-cell-empty {
    background-color: $gray-400;
  }

  &.board-cell-action {
    cursor: pointer;
  }

  &:not(.board-cell-empty) {
    background-color: $gray-100;
  }

  & > * {
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
  }

  .hover-focus-visible {
    visibility: hidden;
    opacity: 0.5;
  }
}

body:not(.no-hover) {
  .board-cell {
    &.board-cell-action {
      &:hover, &:focus {
        background-color: $gray-200;
      }
    }

    &:hover, &:focus {
      .hover-focus-visible {
        visibility: visible;
      }
    }
  }
}

.gameover-overlay {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;

  background-color: rgba(255, 255, 255, 0.80);
}
